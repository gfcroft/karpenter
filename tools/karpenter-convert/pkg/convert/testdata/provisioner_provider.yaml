apiVersion: karpenter.sh/v1alpha5
kind: Provisioner
metadata:
  name: default
spec:
  consolidation:
    enabled: true
  taints:
    - key: example.com/special-taint
      effect: NoSchedule
  startupTaints:
    - key: example.com/another-taint
      effect: NoSchedule
  labels:
    billing-team: my-team
  annotations:
    example.com/owner: "my-team"
  requirements:
    - key: "kubernetes.io/arch"
      operator: Exists
    - key: "karpenter.sh/capacity-type" # If not included, the webhook for the AWS cloud provider will default to on-demand
      operator: In
      values: ["spot", "on-demand"]
  provider:
    subnetSelector:
      karpenter.sh/discovery: karpenter-demo
    securityGroupSelector:
      karpenter.sh/discovery: karpenter-demo
    context: test-context-id
    instanceProfile: "KarpenterInstanceProfile-karpenter-demo"
    tags:
      app.kubernetes.io/created-by: karpenter-demo
      aws-node-termination-handler/managed: "true"
    metadataOptions:
      httpEndpoint: disabled
      httpProtocolIPv6: enabled
      httpPutResponseHopLimit: 2
      httpTokens: required
    blockDeviceMappings:
      - deviceName: /dev/xvda
        ebs:
          volumeSize: 100Gi
          volumeType: gp3
          iops: 10000
          encrypted: true
          kmsKeyID: "arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"
          deleteOnTermination: true
          throughput: 125
          snapshotID: snap-0123456789